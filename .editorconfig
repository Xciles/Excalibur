# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\Projects\Excalibur\Excalibur.Cross\ codebase based on best match to current usage at 13/10/2018
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]
# top-most EditorConfig file
root = true

#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = space:error

#Formatting - indentation options

#indent switch case contents.
csharp_indent_case_contents = true:suggestion
#csharp_indent_case_contents_when_block
csharp_indent_case_contents_when_block = false:suggestion

#Formatting - new line options

#place catch statements on a new line
csharp_new_line_before_catch = true:suggestion
#place else statements on a new line
csharp_new_line_before_else = true:suggestion

#Formatting - organize using options

#sort System.* using directives alphabetically, and place them before other usings
dotnet_sort_system_directives_first = true:suggestion

#Formatting - spacing options

#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true:suggestion
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true:suggestion
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true:suggestion
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false:suggestion
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false:suggestion
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false:suggestion
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false:suggestion
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false:suggestion

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true

#Style - expression bodied member options

#prefer expression-bodied members for accessors
csharp_style_expression_bodied_accessors = true:suggestion
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
#prefer block bodies for methods
csharp_style_expression_bodied_methods = true:suggestion
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties = true:suggestion

#Style - implicit and explicit types

#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = true:suggestion
#prefer var when the type is already mentioned on the right-hand side of a declaration expression
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

#Style - qualification options

#prefer events not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_event = false:suggestion
#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion

#custom
dotnet_style_require_accessibility_modifiers = always:suggestion
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion

dotnet_style_readonly_field = true:suggestion

dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

csharp_style_inlined_variable_declaration = true:suggestion

csharp_prefer_simple_default_expression = true:suggestion

csharp_prefer_braces = true:suggestion

csharp_new_line_between_query_expression_clauses = true:suggestion

csharp_indent_case_contents = true:suggestion
csharp_indent_switch_labels = true:suggestion

csharp_space_around_binary_operators = before_and_after:suggestion

csharp_preserve_single_line_statements = false:suggestion

csharp_new_line_before_finally = true
csharp_new_line_before_open_brace = all
csharp_new_line_before_finally = true:suggestion
csharp_new_line_before_members_in_object_initializers  = true:suggestion
csharp_new_line_before_members_in_anonymous_types  = true:suggestion

wrap_long_lines = false

dotnet_naming_symbols.non_interface_types.applicable_kinds = class, struct, delegate
dotnet_naming_symbols.enum_types.applicable_kinds = enum
dotnet_naming_symbols.interface_types.applicable_kinds = interface

dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_symbols.public_symbols.applicable_kinds = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public
dotnet_naming_symbols.public_symbols.required_modifiers = readonly

dotnet_naming_rule.public_members_must_be_capitalized.severity = suggestion

dotnet_naming_rule.private_members_with_underscore.symbols  = private_fields
dotnet_naming_rule.private_members_with_underscore.style    = prefix_underscore
dotnet_naming_rule.private_members_with_underscore.severity = suggestion

dotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols = interface_types
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.style = prefix_interface_with_i

dotnet_naming_rule.enum_types_must_be_prefixed_with_e.severity = warning
dotnet_naming_rule.enum_types_must_be_prefixed_with_e.symbols = enum_types
dotnet_naming_rule.enum_types_must_be_prefixed_with_e.style = prefix_enum_with_e

dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity = warning
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style = pascal_case

dotnet_naming_rule.public_members_must_be_capitalized.style = first_word_upper_case_style
dotnet_naming_rule.public_members_must_be_capitalized.symbols = public_symbols

dotnet_naming_rule.non_interface_types_must_be_pascal_case.severity = warning
dotnet_naming_rule.non_interface_types_must_be_pascal_case.symbols = non_interface_types
dotnet_naming_rule.non_interface_types_must_be_pascal_case.style = pascal_case

dotnet_naming_style.prefix_underscore.capitalization = camel_case
dotnet_naming_style.prefix_underscore.required_prefix = _

dotnet_naming_style.prefix_interface_with_i.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i.required_prefix = I

dotnet_naming_style.prefix_enum_with_e.capitalization = pascal_case
dotnet_naming_style.prefix_enum_with_e.required_prefix = E

dotnet_naming_symbols.private_fields.applicable_kinds           = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_style.first_word_upper_case_style.capitalization = first_word_upper
